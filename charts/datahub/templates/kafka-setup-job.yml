{{- if .Values.kafkaSetupJob.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-kafka-setup-job
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
    {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.kafkaSetupJob.serviceAccount }}
      serviceAccountName: {{ . }}
    {{- end }}
      restartPolicy: Never
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- with .Values.global.credentialsAndCertsSecrets }}
        - name: datahub-certs-dir
          secret:
            defaultMode: 0444
            secretName: {{ .name }}
        {{- end }}
      {{- with .Values.kafkaSetupJob.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: kafka-setup-job
          image: "{{ .Values.kafkaSetupJob.image.repository }}:{{ .Values.kafkaSetupJob.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaSetupJob.imagePullPolicy | default "Always" }}
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{ .Values.global.kafka.zookeeper.server | quote }}
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{ .Values.global.kafka.bootstrap.server | quote }}
            {{- if .Values.global.springKafkaConfigurationOverrides }}
            {{- range $configName, $configValue := .Values.global.springKafkaConfigurationOverrides }}
            - name: KAFKA_PROPERTIES_{{ $configName | replace "." "_" | upper }}
              value: {{ $configValue }}
            {{- end }}
            {{- end }}
            {{- if .Values.global.credentialsAndCertsSecrets }}
            {{- range $envVarName, $envVarValue := .Values.global.credentialsAndCertsSecrets.secureEnv }}
            - name: KAFKA_PROPERTIES_{{ $envVarName | replace "." "_" | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.credentialsAndCertsSecrets.name }}
                  key: {{ $envVarValue }}
            {{- end }}
            {{- end }}
            {{- with .Values.global.kafka.topics }}
            - name: METADATA_CHANGE_EVENT_NAME
              value: {{ .metadata_change_event_name }}
            - name: FAILED_METADATA_CHANGE_EVENT_NAME
              value: {{ .failed_metadata_change_event_name }}
            - name: METADATA_AUDIT_EVENT_NAME
              value: {{ .metadata_audit_event_name }}
            - name: DATAHUB_USAGE_EVENT_NAME
              value: {{ .datahub_usage_event_name }}
            - name: METADATA_CHANGE_PROPOSAL_TOPIC
              value: {{ .metadata_change_proposal_topic_name }}
            - name: FAILED_METADATA_CHANGE_PROPOSAL_TOPIC
              value: {{ .failed_metadata_change_proposal_topic_name }}
            - name: METADATA_CHANGE_LOG_VERSIONED_TOPIC
              value: {{ .metadata_change_log_versioned_topic_name }}
            - name: METADATA_CHANGE_LOG_TIMESERIES_TOPIC
              value: {{ .metadata_change_log_timeseries_topic_name }}
            {{- end }}
            {{- with .Values.global.kafka.partitions }}
            - name: PARTITIONS
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.global.kafka.replicationFactor }}
            - name: REPLICATION_FACTOR
              value: {{ . | quote }}
            {{- end }}
          {{- with .Values.kafkaSetupJob.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.global.credentialsAndCertsSecrets }}
            - name: datahub-certs-dir
              mountPath: {{ .Values.global.credentialsAndCertsSecrets.path | default "/mnt/certs" }}
          {{- end }}
          {{- with .Values.kafkaSetupJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
      {{- with .Values.kafkaSetupJob.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaSetupJob.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaSetupJob.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
