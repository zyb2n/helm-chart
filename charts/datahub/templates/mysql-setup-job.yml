{{- if .Values.mysqlSetupJob.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-mysql-setup-job
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
    {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.mysqlSetupJob.serviceAccount }}
      serviceAccountName: {{ . }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- with .Values.mysqlSetupJob.extraVolumes }}
        {{- toYaml . | nindent 8}}
      {{- end }}
      restartPolicy: Never
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: mysql-setup-job
          image: "{{ .Values.mysqlSetupJob.image.repository }}:{{ .Values.mysqlSetupJob.image.tag }}"
          imagePullPolicy: {{ .Values.mysqlSetupJob.imagePullPolicy | default "Always" }}
          env:
            - name: DATAHUB_DB_NAME
              value: {{ .Values.global.sql.datasource.db | quote }}
            - name: MYSQL_USERNAME
              value: {{ .Values.global.sql.datasource.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.sql.datasource.password.secretRef }}"
                  key: "{{ .Values.global.sql.datasource.password.secretKey }}"
            {{- if .Values.global.sql.datasource.rootUsername }}
            - name: MYSQL_ROOT_USERNAME
              value: {{ .Values.global.sql.datasource.rootUsername | quote }}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.global.sql.datasource.rootPassword.secretRef }}"
                  key: "{{ .Values.global.sql.datasource.rootPassword.secretKey }}"
            {{- end }}
            - name: MYSQL_HOST
              value: {{ .Values.global.sql.datasource.hostForMysqlClient | quote }}
            - name: MYSQL_PORT
              value: {{ .Values.global.sql.datasource.port | quote }}
            - name: CREATE_USER
              value: {{ .Values.global.sql.createUser | default "false" | quote }}
          {{- with .Values.mysqlSetupJob.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with .Values.mysqlSetupJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
      {{- with .Values.mysqlSetupJob.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysqlSetupJob.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysqlSetupJob.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}